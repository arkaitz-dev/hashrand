import type { I18nTexts } from '$lib/types';

export const en: I18nTexts = {
	common: {
		back: 'Back',
		generate: 'Generate',
		copy: 'Copy',
		copied: 'Copied!',
		backToMenu: 'Back to Menu',
		loading: 'Generating...',
		error: 'Error occurred',
		result: 'Result',
		choose: 'Choose',
		type: 'Type',
		length: 'Length',
		generated: 'Generated',
		format: 'Format',
		security: 'Security',
		loadingVersion: 'Loading version...',
		versionsUnavailable: 'Versions unavailable',
		generationDetails: 'Generation Details',
		parametersUsed: 'Parameters Used',
		generateAnother: 'Generate Another',
		adjustSettings: 'Adjust Settings',
		navigateTo: 'Navigate to',
		selectLanguage: 'Select language',
		switchToLightMode: 'Switch to light mode',
		switchToDarkMode: 'Switch to dark mode',
		characters: 'letters',
		alphabet: 'Alphabet',
		generatedValue: 'Generated Value',
		clickToSelect: 'Click the text area to select all, or use the copy button',
		waitGenerating: 'Please wait while generating new value...',
		unknownEndpoint: 'Unknown endpoint type',
		failedToCopy: 'Failed to copy',
		fallbackCopyFailed: 'Fallback copy failed',
		failedToRegenerate: 'Failed to regenerate',
		failedToLoadVersions: 'Failed to load versions',
		mustBeBetween: 'must be between',
		and: 'and',
		cannotExceed: 'cannot exceed',
		optionalPrefix: 'Optional prefix',
		optionalSuffix: 'Optional suffix',
		prefixCannotExceed: 'Prefix cannot exceed 32 letters',
		suffixCannotExceed: 'Suffix cannot exceed 32 letters',
		yes: 'Yes',
		no: 'No',
		cancel: 'Cancel',
		continue: 'Continue',
		correct: 'Correct',
		send: 'Send',
		sending: 'Sending...',
		formInvalid: 'Form is invalid',
		connectionError: 'Connection error. Try again.',
		sendError: 'Error sending link. Try again.',
		seedUsed: 'Seed Used',
		copySeed: 'Copy Seed',
		optionalSeed: 'Optional seed (64 hex characters)',
		seedInvalid: 'Seed must be exactly 64 hexadecimal characters',
		reuseSeedTitle: 'Reuse the same seed?',
		reuseSeedMessage:
			'Do you want to reuse the same seed to generate the same result, or do you prefer to generate a new random seed?',
		keepSameSeed: 'Keep the same seed',
		generateNewSeed: 'Generate new seed',
		seed: 'Seed',
		otp: 'OTP',
		sessionExpired: 'Your session has expired.',
		close: 'Close',
		understand: 'I understand',
		// Error messages for user notifications
		magicLinkValidationFailed: 'Magic link validation failed',
		signatureValidationError: 'Invalid server response received',
		parameterDecryptionFailed: 'Unable to decrypt parameters',
		parameterDecryptionError: 'Parameter decryption error',
		generationError: 'Generation error',
		regenerationError: 'Regeneration error',
		pageNotFound: 'Page not found (404)',
		serverError: 'Server error (500)',
		clientError: 'Client error ({status})',
		genericError: 'Error ({status})',
		redirectingToHome: 'Redirecting to home...',
		update: 'Update',
		updating: 'Updating',
		updateAvailable: 'Update available',
		day: 'day',
		days: 'days',
		minutes: 'minutes'
	},
	menu: {
		title: 'Hash Generator',
		subtitle: 'Choose a generation method',
		version: 'Version',
		brandName: 'HashRand',
		description: 'Cryptographically secure hash, password, and API key generator'
	},
	custom: {
		title: 'Custom Hash Generator',
		description: 'Generate customized random hashes',
		generateHash: 'Generate Hash',
		length: 'Length',
		alphabet: 'Alphabet Type',
		prefix: 'Prefix',
		suffix: 'Suffix',
		lengthMustBeBetween: 'Length must be between 2 and 128',
		bitcoinDescription: 'Bitcoin alphabet, excludes confusing letters',
		maxReadabilityDescription: 'Maximum readability, 49 letters',
		completeAlphanumericDescription: 'Complete alphanumeric set',
		maxEntropyDescription: 'Maximum entropy with symbols',
		numericDescription: 'Only digits 0-9, requires longer length',
		failedToGenerateHash: 'Failed to generate hash'
	},
	password: {
		title: 'Secure Password Generator',
		description: 'Generate secure passwords',
		generatePassword: 'Generate Password',
		length: 'Length',
		alphabet: 'Character Set',
		maxSecurityDescription: 'Maximum security with symbols (73 chars)',
		easyReadDescription: 'Easy to read and type (49 chars)',
		securityNote: 'Security Note:',
		securityDescription:
			'Passwords are generated using cryptographically secure random generation. They are not stored or logged anywhere.',
		noLookAlikeNote:
			'No Look-alike alphabet excludes confusable letters. Minimum {0} letters for equivalent security.',
		fullAlphabetNote:
			'Full alphabet with symbols provides maximum entropy. Minimum {0} letters for strong security.',
		failedToGeneratePassword: 'Failed to generate password'
	},
	apiKey: {
		title: 'API Key Generator',
		description: 'Generate API keys with ak_ prefix',
		generateApiKey: 'Generate API Key',
		length: 'Length',
		alphabet: 'Character Set',
		standardAlphanumericDescription: 'Standard alphanumeric (62 chars)',
		noConfusingDescription: 'No confusing letters (49 chars)',
		formatNotice:
			'All API keys are generated with the "ak_" prefix for easy identification. The specified length refers only to the random letters generated (prefix not counted).',
		securityNotice:
			'Store API keys securely and never expose them in client-side code or version control. Treat them with the same care as passwords.',
		formatPrefix: 'ak_ prefix +',
		randomCharacters: 'random characters using',
		noLookAlikeAlphabet: '(easy to type)',
		fullAlphanumericAlphabet: '(maximum compatibility)',
		noLookAlikeNote:
			'No Look-alike excludes confusing characters. Minimum {0} characters for equivalent security.',
		fullAlphanumericNote:
			'Full alphanumeric provides maximum compatibility. Minimum {0} characters for strong security.',
		failedToGenerateApiKey: 'Failed to generate API key'
	},
	mnemonic: {
		title: 'BIP39 Mnemonic Generator',
		description: 'Generate BIP39 mnemonic phrases for cryptocurrency wallets',
		generateMnemonic: 'Generate Mnemonic',
		language: 'Language',
		wordCount: 'Word Count',
		languageDescription: 'Select the language for your mnemonic phrase',
		words12: '12 words (128-bit entropy)',
		words12Description: '128-bit entropy - compatible with most wallets',
		words24: '24 words (256-bit entropy)',
		words24Description: '256-bit entropy - maximum security for large amounts',
		formatNotice:
			'Generated phrases follow BIP39 standard and are compatible with most cryptocurrency wallets.',
		securityNotice:
			'Never share your mnemonic phrase with anyone. Anyone with access to your mnemonic can control your funds. Store it offline in a secure location.',
		failedToGenerateMnemonic: 'Failed to generate mnemonic',
		languages: {
			english: 'English',
			spanish: 'Spanish',
			french: 'French',
			portuguese: 'Portuguese',
			japanese: 'Japanese',
			chinese: 'Chinese (Simplified)',
			chineseTraditional: 'Chinese (Traditional)',
			italian: 'Italian',
			korean: 'Korean',
			czech: 'Czech'
		}
	},
	alphabets: {
		base58: 'Base58 (Bitcoin alphabet)',
		'no-look-alike': 'No Look-alike',
		full: 'Full Alphanumeric',
		'full-with-symbols': 'Full with Symbols',
		numeric: 'Numeric (0-9)'
	},
	auth: {
		loginRequired: 'Authentication Required',
		loginDescription: 'Enter your email to receive a magic link for access.',
		emailAddress: 'Email Address',
		emailPlaceholder: 'your@email.com',
		emailRequired: 'Email is required',
		emailInvalid: 'Please enter a valid email',
		sendMagicLink: 'Send Magic Link',
		requestFailed: 'Failed to request magic link',
		confirmEmail: 'Confirm Email',
		confirmEmailDescription: 'Is this correct?',
		magicLinkSent: 'Link Sent!',
		magicLinkInstructions: 'Check your email and click the magic link to authenticate.',
		magicLinkSentFlash: 'Magic link sent. Check your email and click the link to continue.',
		magicLinkErrorFlash: 'Error sending magic link. Please try again.',
		developmentMode: 'Development Mode:',
		testMagicLink: 'Click here to test magic link',
		authenticationFailed: 'Authentication failed',
		tokenExpired: 'Your session has expired. Please log in again.',
		accessDenied: 'Access denied. Authentication required.',
		sessionDataCleared: '‚ö†Ô∏è Session data cleared for security',
		userMenu: 'User menu',
		login: 'Log in',
		authenticating: 'Authenticating...',
		authenticatedAs: 'Authenticated as:',
		logout: 'Log out',
		logoutConfirmTitle: 'Log Out',
		logoutConfirmMessage:
			'Are you sure you want to log out? You will need to authenticate again to access protected features.',
		loggedOut: 'Logged out successfully',
		isCorrect: 'It is correct',
		magicLinkError: {
			title: 'Magic Link Error',
			message: 'This magic link can only be used in the original browser',
			explanation:
				'For security reasons, magic links must be opened in the same browser where they were requested.',
			securityTitle: 'Why this security measure?',
			securityExplanation:
				'This dual-factor validation ensures that only the person who requested the magic link from this specific browser can use it.'
		},
		// NEW: Security and fallback messages
		magicLinkValidatedSuccess: '‚úÖ Magic link validated successfully!',
		tokenRefreshStarting: 'üîÑ Starting token renewal...',
		newKeypairGenerated: 'üîë New keypair generated for rotation',
		sendingRefreshRequest: 'üì§ Sending request to /api/refresh...',
		refreshResponseReceived: 'üì• Response received from server',
		keyRotationStarting: 'üîÑ STAGE 2/3: Starting key rotation...',
		keyRotationCompleted: '‚úÖ Key rotation completed (2/3)',
		tokenRenewedNoRotation: '‚è≠Ô∏è Token renewed without rotation (1/3)',
		tokenRefreshSuccess: '‚úÖ Token renewed successfully',
		tokenRefreshError: '‚ùå Error renewing token',
		sessionExpiredRequireLogin: '‚ö†Ô∏è Session expired - new login required',
		cryptoTokensMissing: 'üîê Crypto tokens missing - authentication required',
		sessionCorrupted: '‚ö†Ô∏è Session corrupted - please login again',
		storageSaveFailed: '‚ö†Ô∏è Session may not persist across page reloads (storage issue)',
		encryptionFailed: '‚ö†Ô∏è Unable to encrypt parameters - redirecting to home',
		requiresAuthentication: 'üîê Authentication required to continue'
	},
	sharedSecret: {
		title: 'Shared Secret',
		description: 'Share secure messages with automatic expiration',
		senderEmail: 'Your email',
		emailNotAvailable: 'Email not available - Please log in',
		receiverEmail: 'Recipient email',
		receiverEmailPlaceholder: 'recipient@example.com',
		secretText: 'Secret message',
		secretTextPlaceholder: 'Enter your secure message (max 512 characters)',
		expiresHours: 'Expires in (hours)',
		maxReads: 'Maximum reads',
		requireOtp: 'Require 9-digit OTP',
		sendCopyToSender: 'Send copy to my email',
		createSecret: 'Create Shared Secret',
		creating: 'Creating...',
		secretCreated: 'Shared secret created successfully',
		yourUrl: 'Your URL (unlimited reads)',
		receiverUrl: 'Recipient URL (limited reads)',
		reference: 'Reference',
		otpCode: 'OTP Code',
		copyUrl: 'Copy URL',
		copyReference: 'Copy Reference',
		copyOtp: 'Copy OTP',
		viewSecret: 'View Secret',
		enterOtp: 'Enter 9-digit OTP',
		otpPlaceholder: '123456789',
		submit: 'Submit',
		submitting: 'Validating...',
		secretContent: 'Secret Content',
		from: 'From',
		to: 'To',
		pendingReads: 'Reads remaining',
		unlimited: 'Unlimited',
		expiresAt: 'Expires at',
		role: 'Your role',
		roleSender: 'Sender',
		roleReceiver: 'Receiver',
		deleteSecret: 'Delete Secret',
		deleting: 'Deleting...',
		secretDeleted: 'Secret deleted successfully',
		confirmDelete: 'Are you sure you want to delete this secret?',
		otpRequired: 'This secret requires an OTP to access',
		invalidOtp: 'Invalid OTP provided',
		invalidHash: 'Invalid or missing secret identifier',
		secretNotFound: 'Secret not found or expired',
		secretExpired: 'Secret has expired or all reads consumed',
		emailInvalid: 'Invalid email address',
		secretTooLong: 'Secret text cannot exceed 512 characters',
		secretEmpty: 'Secret text cannot be empty',
		expiresInvalid: 'Expiration must be between 1 and 72 hours',
		readsInvalid: 'Max reads must be between 1 and 10',
		creationError: 'Error creating secret',
		retrievalError: 'Error retrieving secret',
		deletionError: 'Error deleting secret',
		// M3: Enhanced metadata
		unlimitedHint: 'As the sender, you can view this secret unlimited times',
		consumed: 'Consumed',
		consumedHint: 'All reads have been used',
		readRemaining: 'read remaining',
		readsRemaining: 'reads remaining',
		lastReadHint: '‚ö†Ô∏è This is your last available read. The secret will self-destruct after.',
		multipleReadsHint: 'You can access this secret multiple more times',
		timeRemaining: 'Time remaining',
		expired: 'Expired',
		// M1: Last read warning banner
		lastReadWarningTitle: '‚ö†Ô∏è Last Read Available',
		lastReadWarningMessage:
			'This is your last access to this secret. Once you close or reload this page, the secret will be permanently auto-deleted.',
		lastReadWarningTip: 'Save the information now if you need to keep it.'
	},
	logout: {
		title: 'Log Out',
		description: 'Are you sure you want to log out?',
		confirm: 'Log Out',
		cancel: 'Cancel',
		info: 'You will lose access to authenticated features until you log in again.',
		tokenExpired: 'Your session has expired. Please log in again.',
		accessDenied: 'Access denied. Authentication required.',
		userMenu: 'User menu',
		login: 'Log in',
		authenticating: 'Authenticating...',
		authenticatedAs: 'Authenticated as:',
		logout: 'Log out',
		confirmLogout: 'Log out?',
		logoutDescription:
			'Are you sure you want to log out? You will need to authenticate again to access protected features.',
		// NEW: Logout flash messages
		successMessage: '‚úÖ Successfully logged out',
		errorMessage: '‚ùå Error during logout'
	},
	errors: {
		// NEW: Error page messages
		pageNotFoundMessage: 'Page not found (404). Redirecting to home...',
		serverErrorMessage: 'Server error (500). Redirecting to home...',
		clientErrorMessage: 'Client error ({status}). Redirecting to home...',
		genericErrorMessage: 'Error ({status}). Redirecting to home...'
	}
};
