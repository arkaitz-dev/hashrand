# HashRand Spin - Environment Variables Template
# Copy this file to .env and replace with your own secure secrets
# These are cryptographically secure secrets - NEVER commit to git

# Spin Variables (SPIN_VARIABLE_ prefix required)
# JWT Secret for token signing (64 hex chars = 32 bytes)
# Generate: python3 -c "import secrets; print('SPIN_VARIABLE_JWT_SECRET=' + secrets.token_hex(32))"
SPIN_VARIABLE_JWT_SECRET=your-64-character-hex-secret-here

# HMAC Key for magic link integrity (64 hex chars = 32 bytes) 
# Generate: python3 -c "import secrets; print('SPIN_VARIABLE_MAGIC_LINK_HMAC_KEY=' + secrets.token_hex(32))"
SPIN_VARIABLE_MAGIC_LINK_HMAC_KEY=your-64-character-hex-secret-here

# HMAC Key for secure user ID derivation (64 hex chars = 32 bytes)
# Generate: python3 -c "import secrets; print('SPIN_VARIABLE_USER_ID_HMAC_KEY=' + secrets.token_hex(32))"
SPIN_VARIABLE_USER_ID_HMAC_KEY=your-64-character-hex-secret-here

# Salt for Argon2id user ID derivation (64 hex chars = 32 bytes)
# Generate: python3 -c "import secrets; print('SPIN_VARIABLE_ARGON2_SALT=' + secrets.token_hex(32))"
SPIN_VARIABLE_ARGON2_SALT=your-64-character-hex-secret-here

# ChaCha20-Poly1305 encryption key for magic link encryption (64 hex chars = 32 bytes)
# Generate: python3 -c "import secrets; print('SPIN_VARIABLE_CHACHA_ENCRYPTION_KEY=' + secrets.token_hex(32))"
SPIN_VARIABLE_CHACHA_ENCRYPTION_KEY=your-64-character-hex-secret-here

# Mailtrap API Token for sending emails (custom domain)
# Get from: https://mailtrap.io/api-tokens  
SPIN_VARIABLE_MAILTRAP_API_TOKEN=your-mailtrap-api-token-here

# Mailtrap Inbox ID (found in your inbox URL)
# Example: https://mailtrap.io/inboxes/4000262/messages
SPIN_VARIABLE_MAILTRAP_INBOX_ID=your-inbox-id-here

# Mailtrap API URL (use production endpoint for custom domain)
SPIN_VARIABLE_MAILTRAP_API_URL=https://send.api.mailtrap.io/api/send

# Sender email address using your custom domain
SPIN_VARIABLE_FROM_EMAIL=noreply@your-domain.com

# Development/Production mode
NODE_ENV=development